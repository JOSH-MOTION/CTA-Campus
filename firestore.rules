rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    function isStaff() {
      let userRole = getUserRole(request.auth.uid);
      return userRole == 'teacher' || userRole == 'admin';
    }

    function isTargeted(resource) {
      let userGen = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.gen;
      return resource.data.targetGen == 'Everyone' || 
             resource.data.targetGen == 'All Students' || 
             resource.data.targetGen == userGen;
    }

    // Collection Rules
    match /users/{userId} {
      allow read: if isSignedIn();

      // Allow a user to update their own profile, but not their role or totalPoints.
      // Staff can update anything.
      allow update: if (isOwner(userId) && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['displayName', 'bio', 'gen', 'lessonDay', 'lessonType', 'gensTaught', 'linkedin', 'github', 'photoURL', 'schoolId', 'availableDays', 'timeSlots'])) || isStaff();
      
      // Allow a user to increment their own totalPoints, or staff to change it.
      allow update: if (isOwner(userId) && request.resource.data.totalPoints == resource.data.totalPoints + request.resource.data.diff(resource.data).affectedKeys().get('totalPoints').after()) || isStaff();

      match /points/{pointId} {
        // A user can create point entries for themselves. Staff can do anything.
        allow create: if isOwner(userId);
        allow read, update, delete: if isStaff();
      }
    }

    match /announcements/{announcementId} {
        allow read: if isStaff() || isTargeted(resource);
        allow write, delete: if isStaff();
    }

    match /assignments/{assignmentId} {
        allow read: if isStaff() || isTargeted(resource);
        allow write, delete: if isStaff();
    }
    
    match /exercises/{exerciseId} {
        allow read: if isStaff() || isTargeted(resource);
        allow write, delete: if isStaff();
    }
    
    match /projects/{projectId} {
        allow read: if isStaff() || isTargeted(resource);
        allow write, delete: if isStaff();
    }
    
    match /submissions/{submissionId} {
        allow read: if isOwner(resource.data.studentId) || isStaff();
        allow create: if isOwner(request.resource.data.studentId);
        allow delete: if isStaff();
    }
    
    match /resources/{resourceId} {
        allow read: if isSignedIn();
        allow write, delete: if isStaff();
    }
    
    match /materials/{materialId} {
        allow read: if isSignedIn();
        allow write, delete: if isStaff();
    }

    match /roadmap_status/{weekId} {
        allow read: if isSignedIn();
        allow write: if isStaff();
    }

    match /notifications/{notificationId} {
        allow read, write: if isOwner(resource.data.userId);
    }

    match /chats/{chatId}/{message=**} {
      allow read, write: if isSignedIn();
    }
  }
}
