rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check roles
    function isRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }

    function isTeacher() {
      return isRole('teacher');
    }

    function isAdmin() {
      return isRole('admin');
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Rules for the main users collection
    match /users/{userId} {
      // Students can read/write their own document.
      // Teachers and Admins can read any user document.
      allow read: if isOwner(userId) || isTeacher() || isAdmin();
      allow update: if isOwner(userId);
      // Deny create/delete on individual user docs for now, handled by auth triggers.
      allow create, delete: if false;

      // Rules for the points subcollection
      match /points/{pointId} {
        // Only teachers and admins can award or revoke points.
        allow write, delete: if isTeacher() || isAdmin();
        // Users can read their own points.
        allow read: if isOwner(userId);
      }
    }
    
    // Rules for other collections
    match /announcements/{announcementId} {
        allow read: if request.auth != null;
        allow write: if isTeacher() || isAdmin();
    }

    match /assignments/{assignmentId} {
        allow read: if request.auth != null;
        allow write: if isTeacher() || isAdmin();
    }
    
    match /exercises/{exerciseId} {
        allow read: if request.auth != null;
        allow write: if isTeacher() || isAdmin();
    }

    match /projects/{projectId} {
        allow read: if request.auth != null;
        allow write: if isTeacher() || isAdmin();
    }
    
    match /resources/{resourceId} {
        allow read: if request.auth != null;
        allow write: if isTeacher() || isAdmin();
    }
    
    match /materials/{materialId} {
        allow read: if request.auth != null;
        allow write: if isTeacher() || isAdmin();
    }

    match /roadmap_status/{weekId} {
        allow read: if request.auth != null;
        allow write: if isTeacher() || isAdmin();
    }
    
    match /submissions/{submissionId} {
        // Users can read their own submissions, teachers/admins can read all.
        allow read: if isTeacher() || isAdmin() || request.auth.uid == resource.data.studentId;
        // Users can create their own submissions. Teachers/Admins can delete.
        allow create: if request.auth.uid == request.resource.data.studentId;
        allow delete: if isTeacher() || isAdmin();
        allow update: if false; // Submissions are not updatable.
    }
    
     match /chats/{chatId}/messages/{messageId} {
      allow read, write: if request.auth != null;
    }
    
    match /notifications/{notificationId} {
       allow read, write: if request.auth.uid == resource.data.userId;
    }
  }
}
