rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /* ================================
       Helper Functions
    ===================================*/

    function isSignedIn() {
      return request.auth != null;
    }

    function isRole(role) {
      return isSignedIn() &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    function isStudent() {
      return isRole('student');
    }

    function isTeacher() {
      return isRole('teacher');
    }

    function isAdmin() {
      return isRole('admin');
    }
    
    function isStaff() {
      return isTeacher() || isAdmin();
    }

    function userGen() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.gen;
    }

    // Safe targeted check for students
    function isTargetedToStudent(resource) {
      return isStudent() &&
             resource.data.targetGen != null &&
             (
               resource.data.targetGen == 'Everyone' || 
               resource.data.targetGen == 'All Students' || 
               resource.data.targetGen == userGen()
             );
    }

    /* ================================
       Users Collection
    ===================================*/

    match /users/{userId} {
      allow read: if isSignedIn();

      // Only allow user to update their own profile and specific fields
      allow update: if request.auth.uid == userId &&
                       request.resource.data.keys().hasOnly(['name', 'profilePictureUrl']);

      allow create: if isStaff();

      allow delete: if false;
    }

    /* ================================
       Points Subcollection
    ===================================*/
    match /users/{userId}/points/{pointId} {
      allow read: if isStaff() || (request.auth.uid == userId);
      allow create, update, delete: if isStaff();
    }

    /* ================================
       Announcements
    ===================================*/
    match /announcements/{announcementId} {
      allow read: if isStaff() || isTargetedToStudent(resource);
      allow create, update, delete: if isStaff();
    }

    /* ================================
       Assignments
    ===================================*/
    match /assignments/{assignmentId} {
      allow read: if isStaff() || isTargetedToStudent(resource);
      allow create, update, delete: if isStaff();
    }

    /* ================================
       Exercises
    ===================================*/
    match /exercises/{exerciseId} {
      allow read: if isStaff() || isTargetedToStudent(resource);
      allow create, update, delete: if isStaff();
    }

    /* ================================
       Projects
    ===================================*/
    match /projects/{projectId} {
      allow read: if isStaff() || isTargetedToStudent(resource);
      allow create, update, delete: if isStaff();
    }

    /* ================================
       Submissions
    ===================================*/
    match /submissions/{submissionId} {
      // Staff can list all submissions
      allow list: if isStaff();
      
      // Students can read their own submissions
      allow read: if isStaff() || (request.auth.uid == resource.data.studentId);

      // Student can create their own submission
      allow create: if request.auth.uid == request.resource.data.studentId;

      allow update, delete: if isStaff();
    }

    /* ================================
       Resources
    ===================================*/
    match /resources/{resourceId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isStaff();
    }

    /* ================================
       Materials
    ===================================*/
    match /materials/{materialId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isStaff();
    }

    /* ================================
       Roadmap Status
    ===================================*/
    match /roadmap_status/{weekId} {
      allow read: if isSignedIn();
      allow create, update: if isStaff();
      allow delete: if false;
    }

    /* ================================
       Notifications
    ===================================*/
    match /notifications/{notificationId} {
      allow read, update: if request.auth.uid == resource.data.userId;
      allow create, delete: if isStaff();
    }

    /* ================================
       Chats (Members Only)
    ===================================*/
    match /chats/{chatId}/{message=**} {
      allow read, write: if isSignedIn() &&
                          get(/databases/$(database)/documents/chats/$(chatId)).data.members != null &&
                          get(/databases/$(database)/documents/chats/$(chatId)).data.members.hasAny([request.auth.uid]);
    }
  }
}
