rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }
    
    function isUser(userId) {
        return isAuth() && request.auth.uid == userId;
    }
    
    function getUserRole(userId) {
        return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    function isTeacherOrAdmin(userId) {
        let role = getUserRole(userId);
        return role == 'teacher' || role == 'admin';
    }

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Allow users to read and update their own document
    // Allow teachers/admins to read any user document
    match /users/{userId} {
      allow get: if isUser(userId) || isTeacherOrAdmin(request.auth.uid);
      allow list: if isTeacherOrAdmin(request.auth.uid);
      allow update: if isUser(userId);
    }

    // Allow users to read their own points
    // Allow teachers/admins to read/write/delete any user's points
    match /users/{userId}/points/{pointId} {
        allow read: if isUser(userId) || isTeacherOrAdmin(request.auth.uid);
        allow write, delete: if isTeacherOrAdmin(request.auth.uid);
    }
    
    // Allow logged-in users to perform actions on other collections based on their roles
    match /announcements/{announcementId} {
        allow read: if isAuth();
        allow write: if isTeacherOrAdmin(request.auth.uid);
    }

    match /assignments/{assignmentId} {
        allow read: if isAuth();
        allow write: if isTeacherOrAdmin(request.auth.uid);
    }

    match /exercises/{exerciseId} {
        allow read: if isAuth();
        allow write: if isTeacherOrAdmin(request.auth.uid);
    }

    match /projects/{projectId} {
        allow read: if isAuth();
        allow write: if isTeacherOrAdmin(request.auth.uid);
    }
    
    match /resources/{resourceId} {
        allow read: if isAuth();
        allow write: if isTeacherOrAdmin(request.auth.uid);
    }
    
    match /materials/{materialId} {
        allow read: if isAuth();
        allow write: if isTeacherOrAdmin(request.auth.uid);
    }

    match /roadmap_status/{weekId} {
        allow read: if isAuth();
        allow write: if isTeacherOrAdmin(request.auth.uid);
    }
    
    match /submissions/{submissionId} {
        allow read: if isTeacherOrAdmin(request.auth.uid) || get(/databases/$(database)/documents/submissions/$(submissionId)).data.studentId == request.auth.uid;
        allow create: if isAuth();
        allow delete: if isTeacherOrAdmin(request.auth.uid);
    }

    match /chats/{chatId}/messages/{messageId} {
        allow read, write: if isAuth();
    }
    
    match /notifications/{notificationId} {
       allow read, write: if get(/databases/$(database)/documents/notifications/$(notificationId)).data.userId == request.auth.uid;
    }
  }
}
