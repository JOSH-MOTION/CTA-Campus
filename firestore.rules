
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user has a specific role.
    // It's important that any user checking another's role has read access to the /users/{userId} document.
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can read public user profiles (needed for directory, chat, etc.)
      allow read: if request.auth != null;
      // Only the user themselves can write to their own document.
      allow write: if request.auth.uid == userId;
    }

    // Rules for collections where teachers/admins create content for all to read.
    match /(announcements|assignments|exercises|projects|resources|roadmap_status)/{docId} {
      // Any authenticated user can read.
      allow read: if request.auth != null;
      // Only teachers or admins can write.
      allow write: if getUserRole(request.auth.uid) in ['teacher', 'admin'];
    }

    // Rules for 'submissions'
    match /submissions/{submissionId} {
      // Allow read/delete only by teachers/admins.
      allow read, delete: if getUserRole(request.auth.uid) in ['teacher', 'admin'];
      // Allow students to create submissions only for themselves.
      allow create: if request.resource.data.studentId == request.auth.uid;
    }
    
    // Rules for 'chats'
    match /chats/{chatId}/messages/{messageId} {
        // Allow read/write if the user is part of the chat.
        // For group chats, the chatId is 'group-GEN'.
        // For DMs, the chatId is 'userId1-userId2'.
        allow read, write: if request.auth != null && (
                            (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.gen in chatId) || (request.auth.uid in chatId.split('-'))
                           );
    }

    // Rules for user-specific subcollections like 'points' and 'notifications'
    match /users/{userId}/{subcollection}/{docId} {
      // Allow a user to access only their own subcollections.
      allow read, write, delete: if request.auth.uid == userId;
    }
  }
}
