rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function getRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }
    
    function isStudent() {
      return getRole(request.auth.uid) == 'student';
    }

    function isTeacher() {
      return getRole(request.auth.uid) == 'teacher';
    }

    function isAdmin() {
      return getRole(request.auth.uid) == 'admin';
    }
    
    function isOwner(userId) {
        return request.auth.uid == userId;
    }
    
    match /users/{userId} {
      // Users can read and write to their own document
      // Teachers and Admins can read any user document
      allow read: if isOwner(userId) || isTeacher() || isAdmin();
      allow write: if isOwner(userId);

      // Admins and teachers can award/revoke points for any student
      match /points/{pointId} {
        allow read: if isOwner(userId) || isTeacher() || isAdmin();
        allow write, delete: if isTeacher() || isAdmin();
      }
    }

    // All authenticated users can see announcements, but only teachers/admins can create/edit/delete
    match /announcements/{announcementId} {
      allow read: if request.auth != null;
      allow write, delete: if isTeacher() || isAdmin();
    }
    
    // Students can submit work. Teachers/admins can view all submissions.
    match /submissions/{submissionId} {
        allow read: if isTeacher() || isAdmin() || resource.data.studentId == request.auth.uid;
        allow create: if isStudent();
        allow delete: if isTeacher() || isAdmin();
    }

    // All authenticated users can see assignments, but only teachers/admins can manage them
    match /assignments/{assignmentId} {
        allow read: if request.auth != null;
        allow write, delete: if isTeacher() || isAdmin();
    }
    
    // All authenticated users can see exercises, but only teachers/admins can manage them
    match /exercises/{exerciseId} {
        allow read: if request.auth != null;
        allow write, delete: if isTeacher() || isAdmin();
    }
    
    // All authenticated users can see projects, but only teachers/admins can manage them
    match /projects/{projectId} {
        allow read: if request.auth != null;
        allow write, delete: if isTeacher() || isAdmin();
    }

    // All authenticated users can see materials, but only teachers/admins can manage them
    match /materials/{materialId} {
      allow read: if request.auth != null;
      allow write, delete: if isTeacher() || isAdmin();
    }
    
    // All authenticated users can see resources, but only teachers/admins can manage them
    match /resources/{resourceId} {
      allow read: if request.auth != null;
      allow write, delete: if isTeacher() || isAdmin();
    }

    // Users can only access their own notifications.
    match /notifications/{notificationId} {
      allow read, write: if resource.data.userId == request.auth.uid;
    }
    
    // Roadmap status is readable by all, writable only by teachers/admins.
    match /roadmap_status/{weekId} {
        allow read: if request.auth != null;
        allow write: if isTeacher() || isAdmin();
    }
    
    // Chat messages can only be read/written by authenticated users.
    // Further granular rules could be added (e.g., checking group membership)
    match /chats/{chatId}/messages/{messageId} {
      allow read, write, delete: if request.auth != null;
    }
  }
}
