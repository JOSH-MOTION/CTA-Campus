
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if the requesting user has a 'teacher' or 'admin' role.
    function isStaff() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['teacher', 'admin'];
    }

    // By default, deny all reads and writes to all documents.
    match /{document=**} {
      allow read, write: if false;
    }

    // Rules for the 'users' collection.
    match /users/{userId} {
      // Users can read their own document. Staff can read any user document.
      allow read: if request.auth.uid == userId || isStaff();
      // Users can only write to their own document.
      allow write: if request.auth.uid == userId;

      // Rules for the 'points' subcollection within a user document.
      match /points/{pointId} {
        // A user can read their own points. Staff can read any user's points.
        allow read: if request.auth.uid == userId || isStaff();
        // Staff (teachers or admins) can create, update, and delete point entries for any user.
        allow write: if isStaff();
      }

      // Rules for the 'notifications' subcollection.
      match /notifications/{notificationId} {
        // Users can only read and write to their own notifications.
        allow read, write: if request.auth.uid == userId;
      }
    }

    // Rules for top-level collections accessible by students and staff.
    match /announcements/{announcementId} {
      allow read: if request.auth != null;
      allow write: if isStaff();
    }
    match /assignments/{assignmentId} {
      allow read: if request.auth != null;
      allow write: if isStaff();
    }
    match /exercises/{exerciseId} {
      allow read: if request.auth != null;
      allow write: if isStaff();
    }
    match /projects/{projectId} {
      allow read: if request.auth != null;
      allow write: if isStaff();
    }
     match /resources/{resourceId} {
      allow read: if request.auth != null;
      allow write: if isStaff();
    }
    match /materials/{materialId} {
      allow read: if request.auth != null;
      allow write: if isStaff();
    }
    match /roadmap_status/{weekId} {
        allow read: if request.auth != null;
        allow write: if isStaff();
    }

    // Rules for the 'submissions' collection.
    match /submissions/{submissionId} {
        // Students can create submissions.
        allow create: if request.auth.uid == request.resource.data.studentId;
        // Staff can read and delete any submission.
        allow read, delete: if isStaff();
    }
    
    // Rules for the 'chats' collection
    match /chats/{chatId}/{message=**} {
      allow read, write: if request.auth != null; // Simplistic rule, allows any authenticated user to read/write to any chat.
    }
  }
}
