rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isTeacherOrAdmin() {
      // Use the custom claims if set, or get from the user's document.
      // For this app, we rely on the document data.
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['teacher', 'admin'];
    }

    function isStudent() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'student';
    }

    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // USER PROFILES
    match /users/{userId} {
      // Any authenticated user can read any other user's profile (for Directory, Chat, etc.)
      allow read: if isAuthenticated();
      // A user can only create or update their own profile.
      allow write: if request.auth.uid == userId;
    }

    // ANNOUNCEMENTS, ASSIGNMENTS, PROJECTS, EXERCISES, RESOURCES
    // All authenticated users can read these collections.
    // Only teachers or admins can write to them.
    match /announcements/{docId} {
      allow read: if isAuthenticated();
      allow write: if isTeacherOrAdmin();
    }
    match /assignments/{docId} {
      allow read: if isAuthenticated();
      allow write: if isTeacherOrAdmin();
    }
    match /projects/{docId} {
      allow read: if isAuthenticated();
      allow write: if isTeacherOrAdmin();
    }
    match /exercises/{docId} {
      allow read: if isAuthenticated();
      allow write: if isTeacherOrAdmin();
    }
    match /resources/{docId} {
      allow read: if isAuthenticated();
      allow write: if isTeacherOrAdmin();
    }
    match /materials/{docId} {
        allow read: if isAuthenticated();
        allow write: if isTeacherOrAdmin();
    }

    // SUBMISSIONS
    match /submissions/{submissionId} {
        // Students can only create submissions for themselves.
        allow create: if isStudent() && request.resource.data.studentId == request.auth.uid;
        // Teachers/Admins can read and delete any submission.
        allow read, delete: if isTeacherOrAdmin();
    }
    
    // ROADMAP STATUS
    match /roadmap_status/{weekId} {
        // Any authenticated user can read the status.
        allow read: if isAuthenticated();
        // Only teachers/admins can change the completion status.
        allow write: if isTeacherOrAdmin();
    }

    // NOTIFICATIONS & POINTS
    // Users can only access their own subcollections.
    match /users/{userId}/notifications/{notificationId} {
        allow read, write: if request.auth.uid == userId;
    }
    match /users/{userId}/points/{pointId} {
        allow read, write: if request.auth.uid == userId;
    }

    // AI CHAT HISTORY
    match /users/{userId}/ai-chats/{chatId} {
        allow read, write: if request.auth.uid == userId;
    }
    
    // CHATS
    match /chats/{chatId}/messages/{messageId} {
        // Allow read/write if the user is part of the chat.
        // For DMs, the chatId is 'uid1-uid2'.
        // For groups, the chatId is 'group-GenXX'.
        // We'll allow any authenticated user to read/write for now for simplicity,
        // as determining membership within rules can be complex without a dedicated 'members' list.
        allow read, write: if isAuthenticated();
    }
  }
}