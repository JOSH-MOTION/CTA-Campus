rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check the role of the requesting user.
    function isRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    // Default deny all reads and writes to ensure security.
    match /{document=**} {
      allow read, write: if false;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow users to read their own data.
      // Allow teachers and admins to read any user's data for management purposes.
      allow read: if request.auth.uid == userId || isRole('teacher') || isRole('admin');
      
      // Allow users to update their own data.
      allow update: if request.auth.uid == userId;

      // Rules for the 'points' subcollection
      match /points/{pointId} {
        // Users can read their own points. Teachers/admins can read any user's points.
        allow read: if request.auth.uid == userId || isRole('teacher') || isRole('admin');

        // Allow teachers and admins to create, update, or delete points for any user.
        allow write: if isRole('teacher') || isRole('admin');
      }
    }

    // Rules for other collections
    match /announcements/{announcementId} {
      allow read: if true;
      allow write: if isRole('teacher') || isRole('admin');
    }
    match /assignments/{assignmentId} {
      allow read: if true;
      allow write: if isRole('teacher') || isRole('admin');
    }
    match /exercises/{exerciseId} {
      allow read: if true;
      allow write: if isRole('teacher') || isRole('admin');
    }
    match /projects/{projectId} {
      allow read: if true;
      allow write: if isRole('teacher') || isRole('admin');
    }
    match /resources/{resourceId} {
      allow read: if true;
      allow write: if isRole('teacher') || isRole('admin');
    }
    match /roadmap_status/{weekId} {
        allow read: if request.auth.uid != null;
        allow write: if isRole('teacher') || isRole('admin');
    }
    match /materials/{materialId} {
        allow read: if request.auth.uid != null;
        allow write: if isRole('teacher') || isRole('admin');
    }
    match /submissions/{submissionId} {
      allow read: if request.auth.uid != null;
      allow create: if request.auth.uid != null;
      allow delete: if isRole('teacher') || isRole('admin');
    }
    match /notifications/{notificationId} {
      allow read, write: if request.auth.uid != null;
    }
    match /chats/{chatId}/{message=**} {
      allow read, write: if request.auth.uid != null;
    }
  }
}
