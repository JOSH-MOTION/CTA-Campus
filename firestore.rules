
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check the role of the user making the request.
    function isStaff() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['teacher', 'admin'];
    }

    // Users can read/write to their own user document.
    // Staff (teachers/admins) can read/write to any user document.
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || isStaff();
      
      // Rules for the 'points' subcollection within each user document.
      match /points/{pointId} {
        // A user can create point entries for themselves.
        allow create: if request.auth.uid == userId;
        // Staff can create, read, update, or delete any point entry.
        allow read, update, delete: if isStaff();
      }
    }

    // Authenticated users can create submissions. The backend service handles validation.
    match /submissions/{submissionId} {
      allow create: if request.auth != null;
      // Staff can read or delete any submission.
      allow read, delete: if isStaff();
    }
    
    // Default deny for all other collections to ensure security.
    match /{path=**}/announcements/{announcementId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isStaff();
    }
    
    match /{path=**}/assignments/{assignmentId} {
       allow read: if request.auth != null;
       allow create, update, delete: if isStaff();
    }

    match /{path=**}/exercises/{exerciseId} {
       allow read: if request.auth != null;
       allow create, update, delete: if isStaff();
    }

    match /{path=**}/projects/{projectId} {
       allow read: if request.auth != null;
       allow create, update, delete: if isStaff();
    }
    
    match /roadmap_status/{weekId} {
        allow read: if request.auth != null;
        allow write: if isStaff();
    }
    
    match /materials/{materialId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isStaff();
    }

    match /resources/{resourceId} {
       allow read: if request.auth != null;
       allow create, update, delete: if isStaff();
    }

    match /notifications/{notificationId} {
      allow read, update: if request.auth.uid == resource.data.userId;
      allow create, delete: if isStaff();
    }

    match /chats/{chatId}/{message=**} {
      allow read, write: if request.auth != null;
    }
  }
}
