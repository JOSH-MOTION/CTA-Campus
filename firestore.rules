rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read public data of other users, but can only write to their own document.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow update: if request.auth.uid == userId;
      // Allow creation during sign-up.
      allow create: if request.auth != null;
    }

    // Chat messages and collections
    match /chats/{chatId}/messages/{messageId} {
      // Allow read/write if the user is part of the DM conversation.
      // DM chatIds are formatted as "uid1-uid2".
      allow read, write: if request.auth.uid in chatId.split('-');

      // OR, allow read/write if it's a group chat and the user belongs to that generation.
      // Group chatIds are "group-GenName"
      allow read, write: if chatId.startsWith('group-') && (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'student' &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.gen == chatId.split('-')[1]
      );
       // OR, allow if the user is a teacher/admin for that gen group chat
      allow read, write: if chatId.startsWith('group-') && (
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher' &&
         chatId.split('-')[1] in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.gensTaught.split(',')) ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
      );
    }
    
    // Allow authenticated users to create new materials
    match /materials/{materialId} {
      allow read, create: if request.auth != null;
    }

  }
}
