
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check user roles
    function isStaff(userId) {
      let userDoc = get(/databases/$(database)/documents/users/$(userId)).data;
      return userDoc.role == 'teacher' || userDoc.role == 'admin';
    }

    match /users/{userId} {
      // Allow users to read their own data.
      // Allow staff to read any user's data.
      allow read: if request.auth.uid == userId || isStaff(request.auth.uid);
      
      // Allow users to update their own document.
      // Allow staff to update any user's document (e.g., to award points).
      allow write: if request.auth.uid == userId || isStaff(request.auth.uid);

      match /points/{pointId} {
        // Users can read their own points history.
        // Staff can read anyone's points history.
        allow read: if request.auth.uid == userId || isStaff(request.auth.uid);
        
        // Users can create their own point entries (via submitting assignments etc.).
        // Staff can create point entries for any user.
        allow create: if request.auth.uid == userId || isStaff(request.auth.uid);

        // Allow staff to update/delete point entries. Students cannot.
        allow update, delete: if isStaff(request.auth.uid);
      }
    }

    match /chats/{chatId} {
      // Anyone authenticated can read/write to chats they are a part of.
      // Group chats are managed by their name (e.g., 'group-Gen 30')
      // DM chats have IDs formed by sorted UIDs.
      allow read, write: if request.auth != null && (
                            chatId.startsWith('group-') || 
                            request.auth.uid in chatId.split('-')
                          );
      
      match /messages/{messageId} {
        allow read, write: if request.auth != null;
      }
    }
    
    match /submissions/{submissionId} {
        // Any authenticated user can create a submission.
        allow create: if request.auth != null;
        
        // Only staff can read all submissions.
        // TODO: Allow students to read their own submissions if needed.
        allow read: if isStaff(request.auth.uid);
        
        // Only staff can update or delete submissions.
        allow update, delete: if isStaff(request.auth.uid);
    }
    
    match /roadmap_status/{weekId} {
        // Anyone authenticated can read the roadmap status.
        allow read: if request.auth != null;
        
        // Only staff can update the roadmap status.
        allow write: if isStaff(request.auth.uid);
    }
    
    // Default allow read for these collections for any authenticated user
    match /{collection}/{docId} 
        where collection in ['announcements', 'assignments', 'exercises', 'projects', 'materials', 'resources'] {
      allow read: if request.auth != null;
    }

    // Default allow write for staff for these collections
    match /{collection}/{docId} 
        where collection in ['announcements', 'assignments', 'exercises', 'projects', 'materials', 'resources'] {
      allow write: if isStaff(request.auth.uid);
    }

    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
  }
}
