
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the requesting user is a teacher or admin
    function isTeacherOrAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['teacher', 'admin'];
    }

    // Helper function to get the requesting user's generation
    function getUserGen() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.gen;
    }

    // Users can read all profiles (for directory) but only write to their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // Students can read their own points.
    // Teachers and admins can create, update, and delete points for any student.
    match /users/{studentId}/points/{pointId} {
      allow read: if request.auth.uid == studentId || isTeacherOrAdmin();
      allow create, update, delete: if isTeacherOrAdmin();
    }

    // Announcements: Read access depends on targetGen. Write access for teachers/admins.
    match /announcements/{announcementId} {
      allow read: if request.auth != null && (
                    resource.data.targetGen == 'Everyone' ||
                    (resource.data.targetGen == 'All Students' && getUserGen() != null) ||
                    resource.data.targetGen == getUserGen() ||
                    isTeacherOrAdmin()
                  );
      allow create, update, delete: if isTeacherOrAdmin();
    }

    // Assignments, Exercises, Projects: Similar rules to announcements.
    match /assignments/{assignmentId} {
      allow read: if request.auth != null && (
                    resource.data.targetGen == 'Everyone' ||
                    (resource.data.targetGen == 'All Students' && getUserGen() != null) ||
                    resource.data.targetGen == getUserGen() ||
                    isTeacherOrAdmin()
                  );
      allow create, update, delete: if isTeacherOrAdmin();
    }
     match /exercises/{exerciseId} {
       allow read: if request.auth != null && (
                    resource.data.targetGen == 'Everyone' ||
                    (resource.data.targetGen == 'All Students' && getUserGen() != null) ||
                    resource.data.targetGen == getUserGen() ||
                    isTeacherOrAdmin()
                  );
      allow create, update, delete: if isTeacherOrAdmin();
    }
     match /projects/{projectId} {
       allow read: if request.auth != null && (
                    resource.data.targetGen == 'Everyone' ||
                    (resource.data.targetGen == 'All Students' && getUserGen() != null) ||
                    resource.data.targetGen == getUserGen() ||
                    isTeacherOrAdmin()
                  );
      allow create, update, delete: if isTeacherOrAdmin();
    }

    // Submissions: Students can create their own. Teachers/admins can read/delete all.
    match /submissions/{submissionId} {
      allow read: if isTeacherOrAdmin() || request.auth.uid == resource.data.studentId;
      allow create: if request.auth.uid == request.resource.data.studentId;
      allow delete: if isTeacherOrAdmin();
    }

    // Resources and Materials: All authenticated users can read. Teachers/admins can write.
    match /resources/{resourceId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isTeacherOrAdmin();
    }
    match /materials/{materialId} {
       allow read: if request.auth != null;
       allow create, update, delete: if isTeacherOrAdmin();
    }

    // Roadmap Status: All can read. Only teachers/admins can write.
    match /roadmap_status/{weekId} {
        allow read: if request.auth != null;
        allow write: if isTeacherOrAdmin();
    }
    
    // Chats: Users can only read/write messages in chats they are a part of.
    // This is a simplified rule; production apps may need more granular control.
    match /chats/{chatId}/messages/{messageId} {
      allow read, write, delete: if request.auth != null; // Simplified for now
    }
    
    // Notifications: Users can only access their own notifications.
    match /notifications/{notificationId} {
        allow read, write: if request.auth.uid == resource.data.userId;
    }
  }
}
