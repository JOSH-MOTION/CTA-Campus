rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isTeacherOrAdmin() {
      // This function relies on the user's custom claim or a read to their user doc.
      // Ensure the rules for /users/{userId} allow this read.
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['teacher', 'admin'];
    }
    
    function isOwner(resource) {
        return request.auth.uid == resource.data.authorId;
    }

    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow get: if isUserAuthenticated();
      allow list: if isTeacherOrAdmin();
      allow create: if isUserAuthenticated();
      allow delete: if isTeacherOrAdmin();
    }

    match /{collection}/{docId} 
        where collection in ['announcements', 'assignments', 'exercises', 'projects', 'resources', 'materials'] {
      allow read: if isUserAuthenticated();
      allow create, update, delete: if isTeacherOrAdmin();
    }
    
    match /roadmap_status/{weekId} {
      allow read: if isUserAuthenticated();
      allow write: if isTeacherOrAdmin();
    }

    match /submissions/{submissionId} {
      allow create: if request.auth.uid == request.resource.data.studentId;
      allow read, delete: if isTeacherOrAdmin();
    }
    
    match /users/{userId}/points/{pointId} {
      allow read, create, delete: if request.auth.uid == userId || isTeacherOrAdmin();
    }

    match /notifications/{notificationId} {
        match /users/{userId}/notifications/{notificationId} {
          allow read, update: if request.auth.uid == userId;
          allow create, delete: if isUserAuthenticated(); // Allow server-side processes or admins to create
        }
    }
    
    // For collection group queries
    match /{path=**}/notifications/{notificationId} {
       allow read, write: if isUserAuthenticated();
    }
    
    match /{path=**}/points/{pointId} {
       allow read: if isUserAuthenticated();
    }

    match /chats/{chatId} {
        allow read, write: if isUserAuthenticated(); // More granular rules below
        
        match /messages/{messageId} {
            allow read, create: if isUserAuthenticated();
            allow update, delete: if isUserAuthenticated() && request.auth.uid == resource.data.senderId;
        }
    }
  }
}
